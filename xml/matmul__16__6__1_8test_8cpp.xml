<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="matmul__16__6__1_8test_8cpp" kind="file" language="C++">
    <compoundname>matmul_16_6_1.test.cpp</compoundname>
    <includes local="no">catch2/catch.hpp</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp</label>
        <link refid="matmul__16__6__1_8test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>catch2/catch.hpp</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="matmul__16__6__1_8test_8cpp_1a2acefa3f51ff882e09e33e878e2672ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void v1_matmul_16_6_1</definition>
        <argsstring>(float const *a, float const *b, float *c, int64_t lda, int64_t ldb, int64_t ldc)</argsstring>
        <name>v1_matmul_16_6_1</name>
        <param>
          <type>float const *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float const *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lda</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ldb</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ldc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" line="6" column="10" declfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" declline="6" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="matmul__16__6__1_8test_8cpp_1a025a062ced84d75243fb099c05c5ee0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void v2_matmul_16_6_1</definition>
        <argsstring>(float const *a, float const *b, float *c, int64_t lda, int64_t ldb, int64_t ldc)</argsstring>
        <name>v2_matmul_16_6_1</name>
        <param>
          <type>float const *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float const *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lda</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ldb</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ldc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" line="13" column="10" declfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" declline="13" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="matmul__16__6__1_8test_8cpp_1a541793b4f0904ea78a6e867ced5ef78d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void v3_matmul_16_6_1</definition>
        <argsstring>(float const *a, float const *b, float *c, int64_t lda, int64_t ldb, int64_t ldc)</argsstring>
        <name>v3_matmul_16_6_1</name>
        <param>
          <type>float const *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float const *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lda</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ldb</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ldc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" line="20" column="10" declfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" declline="20" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="matmul__16__6__1_8test_8cpp_1a1e07bc2bbcdb490acb22be5eddf101da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Tests the v1_matmul_16_6_1 microkernel function&quot;, &quot;[v1_matmul_16_6_1]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Tests the v1_matmul_16_6_1 microkernel function&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[v1_matmul_16_6_1]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" line="28" column="1" bodyfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" bodystart="28" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="matmul__16__6__1_8test_8cpp_1a215cbff0c618051a5aad7ed7e1468416" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Tests the v2_matmul_16_6_1 microkernel function&quot;, &quot;[v2_matmul_16_6_1]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Tests the v2_matmul_16_6_1 microkernel function&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[v2_matmul_16_6_1]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" line="56" column="1" bodyfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" bodystart="56" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="matmul__16__6__1_8test_8cpp_1a2e853f0193f20d4ca552d7f1418e569c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Tests the v3_matmul_16_6_1 microkernel function&quot;, &quot;[v3_matmul_16_6_1]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Tests the v3_matmul_16_6_1 microkernel function&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[v3_matmul_16_6_1]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" line="84" column="1" bodyfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp" bodystart="84" bodyend="110"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;catch2/catch.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>v1_matmul_16_6_1(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*a,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*b,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*c,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>lda,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ldb,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ldc<sp/>);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>v2_matmul_16_6_1(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*a,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*b,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*c,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>lda,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ldb,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ldc<sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>v3_matmul_16_6_1(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*a,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*b,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*c,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>lda,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ldb,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ldc<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">TEST_CASE(<sp/></highlight><highlight class="stringliteral">&quot;Tests<sp/>the<sp/>v1_matmul_16_6_1<sp/>microkernel<sp/>function&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[v1_matmul_16_6_1]&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A[M<sp/>*<sp/>K]<sp/>=<sp/>{0.0f,<sp/>1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f,<sp/>5.0f,<sp/>6.0f,<sp/>7.0f,<sp/>8.0f,<sp/>9.0f,<sp/>10.0f,<sp/>11.0f,<sp/>12.0f,<sp/>13.0f,<sp/>14.0f,<sp/>15.0f};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B[K<sp/>*<sp/>N]<sp/>=<sp/>{0.0f,<sp/>1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f,<sp/>5.0f};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C[M<sp/>*<sp/>N]<sp/>=<sp/>{0.0f};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C_expected[M<sp/>*<sp/>N]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>1.0f,<sp/><sp/>2.0f,<sp/><sp/>3.0f,<sp/><sp/>4.0f,<sp/><sp/>5.0f,<sp/><sp/>6.0f,<sp/><sp/>7.0f,<sp/><sp/>8.0f,<sp/><sp/>9.0f,<sp/>10.0f,<sp/>11.0f,<sp/>12.0f,<sp/>13.0f,<sp/>14.0f,<sp/>15.0f,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>2.0f,<sp/><sp/>4.0f,<sp/><sp/>6.0f,<sp/><sp/>8.0f,<sp/>10.0f,<sp/>12.0f,<sp/>14.0f,<sp/>16.0f,<sp/>18.0f,<sp/>20.0f,<sp/>22.0f,<sp/>24.0f,<sp/>26.0f,<sp/>28.0f,<sp/>30.0f,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>3.0f,<sp/><sp/>6.0f,<sp/><sp/>9.0f,<sp/>12.0f,<sp/>15.0f,<sp/>18.0f,<sp/>21.0f,<sp/>24.0f,<sp/>27.0f,<sp/>30.0f,<sp/>33.0f,<sp/>36.0f,<sp/>39.0f,<sp/>42.0f,<sp/>45.0f,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>4.0f,<sp/><sp/>8.0f,<sp/>12.0f,<sp/>16.0f,<sp/>20.0f,<sp/>24.0f,<sp/>28.0f,<sp/>32.0f,<sp/>36.0f,<sp/>40.0f,<sp/>44.0f,<sp/>48.0f,<sp/>52.0f,<sp/>56.0f,<sp/>60.0f,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>5.0f,<sp/>10.0f,<sp/>15.0f,<sp/>20.0f,<sp/>25.0f,<sp/>30.0f,<sp/>35.0f,<sp/>40.0f,<sp/>45.0f,<sp/>50.0f,<sp/>55.0f,<sp/>60.0f,<sp/>65.0f,<sp/>70.0f,<sp/>75.0f</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>microkernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>v1_matmul_16_6_1(<sp/>A,<sp/>B,<sp/>C,<sp/>M,<sp/>K,<sp/>M<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M<sp/>*<sp/>N;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(<sp/>C[i]<sp/>==<sp/>Approx(<sp/>C_expected[i]<sp/>).epsilon(<sp/>0.01<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">TEST_CASE(<sp/></highlight><highlight class="stringliteral">&quot;Tests<sp/>the<sp/>v2_matmul_16_6_1<sp/>microkernel<sp/>function&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[v2_matmul_16_6_1]&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A[M<sp/>*<sp/>K]<sp/>=<sp/>{0.0f,<sp/>1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f,<sp/>5.0f,<sp/>6.0f,<sp/>7.0f,<sp/>8.0f,<sp/>9.0f,<sp/>10.0f,<sp/>11.0f,<sp/>12.0f,<sp/>13.0f,<sp/>14.0f,<sp/>15.0f};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B[K<sp/>*<sp/>N]<sp/>=<sp/>{0.0f,<sp/>1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f,<sp/>5.0f};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C[M<sp/>*<sp/>N]<sp/>=<sp/>{0.0f};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C_expected[M<sp/>*<sp/>N]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>1.0f,<sp/><sp/>2.0f,<sp/><sp/>3.0f,<sp/><sp/>4.0f,<sp/><sp/>5.0f,<sp/><sp/>6.0f,<sp/><sp/>7.0f,<sp/><sp/>8.0f,<sp/><sp/>9.0f,<sp/>10.0f,<sp/>11.0f,<sp/>12.0f,<sp/>13.0f,<sp/>14.0f,<sp/>15.0f,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>2.0f,<sp/><sp/>4.0f,<sp/><sp/>6.0f,<sp/><sp/>8.0f,<sp/>10.0f,<sp/>12.0f,<sp/>14.0f,<sp/>16.0f,<sp/>18.0f,<sp/>20.0f,<sp/>22.0f,<sp/>24.0f,<sp/>26.0f,<sp/>28.0f,<sp/>30.0f,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>3.0f,<sp/><sp/>6.0f,<sp/><sp/>9.0f,<sp/>12.0f,<sp/>15.0f,<sp/>18.0f,<sp/>21.0f,<sp/>24.0f,<sp/>27.0f,<sp/>30.0f,<sp/>33.0f,<sp/>36.0f,<sp/>39.0f,<sp/>42.0f,<sp/>45.0f,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>4.0f,<sp/><sp/>8.0f,<sp/>12.0f,<sp/>16.0f,<sp/>20.0f,<sp/>24.0f,<sp/>28.0f,<sp/>32.0f,<sp/>36.0f,<sp/>40.0f,<sp/>44.0f,<sp/>48.0f,<sp/>52.0f,<sp/>56.0f,<sp/>60.0f,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>5.0f,<sp/>10.0f,<sp/>15.0f,<sp/>20.0f,<sp/>25.0f,<sp/>30.0f,<sp/>35.0f,<sp/>40.0f,<sp/>45.0f,<sp/>50.0f,<sp/>55.0f,<sp/>60.0f,<sp/>65.0f,<sp/>70.0f,<sp/>75.0f</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>microkernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>v2_matmul_16_6_1(<sp/>A,<sp/>B,<sp/>C,<sp/>M,<sp/>K,<sp/>M<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M<sp/>*<sp/>N;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(<sp/>C[i]<sp/>==<sp/>Approx(<sp/>C_expected[i]<sp/>).epsilon(<sp/>0.01<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">TEST_CASE(<sp/></highlight><highlight class="stringliteral">&quot;Tests<sp/>the<sp/>v3_matmul_16_6_1<sp/>microkernel<sp/>function&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[v3_matmul_16_6_1]&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A[M<sp/>*<sp/>K]<sp/>=<sp/>{0.0f,<sp/>1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f,<sp/>5.0f,<sp/>6.0f,<sp/>7.0f,<sp/>8.0f,<sp/>9.0f,<sp/>10.0f,<sp/>11.0f,<sp/>12.0f,<sp/>13.0f,<sp/>14.0f,<sp/>15.0f};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B[K<sp/>*<sp/>N]<sp/>=<sp/>{0.0f,<sp/>1.0f,<sp/>2.0f,<sp/>3.0f,<sp/>4.0f,<sp/>5.0f};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C[M<sp/>*<sp/>N]<sp/>=<sp/>{0.0f};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C_expected[M<sp/>*<sp/>N]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>1.0f,<sp/><sp/>2.0f,<sp/><sp/>3.0f,<sp/><sp/>4.0f,<sp/><sp/>5.0f,<sp/><sp/>6.0f,<sp/><sp/>7.0f,<sp/><sp/>8.0f,<sp/><sp/>9.0f,<sp/>10.0f,<sp/>11.0f,<sp/>12.0f,<sp/>13.0f,<sp/>14.0f,<sp/>15.0f,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>2.0f,<sp/><sp/>4.0f,<sp/><sp/>6.0f,<sp/><sp/>8.0f,<sp/>10.0f,<sp/>12.0f,<sp/>14.0f,<sp/>16.0f,<sp/>18.0f,<sp/>20.0f,<sp/>22.0f,<sp/>24.0f,<sp/>26.0f,<sp/>28.0f,<sp/>30.0f,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>3.0f,<sp/><sp/>6.0f,<sp/><sp/>9.0f,<sp/>12.0f,<sp/>15.0f,<sp/>18.0f,<sp/>21.0f,<sp/>24.0f,<sp/>27.0f,<sp/>30.0f,<sp/>33.0f,<sp/>36.0f,<sp/>39.0f,<sp/>42.0f,<sp/>45.0f,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>4.0f,<sp/><sp/>8.0f,<sp/>12.0f,<sp/>16.0f,<sp/>20.0f,<sp/>24.0f,<sp/>28.0f,<sp/>32.0f,<sp/>36.0f,<sp/>40.0f,<sp/>44.0f,<sp/>48.0f,<sp/>52.0f,<sp/>56.0f,<sp/>60.0f,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/>5.0f,<sp/>10.0f,<sp/>15.0f,<sp/>20.0f,<sp/>25.0f,<sp/>30.0f,<sp/>35.0f,<sp/>40.0f,<sp/>45.0f,<sp/>50.0f,<sp/>55.0f,<sp/>60.0f,<sp/>65.0f,<sp/>70.0f,<sp/>75.0f</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>microkernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>v3_matmul_16_6_1(<sp/>A,<sp/>B,<sp/>C,<sp/>M,<sp/>K,<sp/>M<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M<sp/>*<sp/>N;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(<sp/>C[i]<sp/>==<sp/>Approx(<sp/>C_expected[i]<sp/>).epsilon(<sp/>0.01<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/matmul_16_6_1.test.cpp"/>
  </compounddef>
</doxygen>
