<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="matmul__m__1__k_8cpp" kind="file" language="C++">
    <compoundname>matmul_m_1_k.cpp</compoundname>
    <includes local="no">mlc/instructions/all_instructions.h</includes>
    <includes local="no">mlc/kernels/matmul/subkernels/matmul_m_1_k.h</includes>
    <includes local="no">mlc/registers/gp_registers.h</includes>
    <includes local="no">mlc/registers/simd_fp_registers.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/kernels/matmul/subkernels/matmul_m_1_k.cpp</label>
        <link refid="matmul__m__1__k_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>mlc/instructions/all_instructions.h</label>
      </node>
      <node id="3">
        <label>mlc/kernels/matmul/subkernels/matmul_m_1_k.h</label>
      </node>
      <node id="4">
        <label>mlc/registers/gp_registers.h</label>
      </node>
      <node id="5">
        <label>mlc/registers/simd_fp_registers.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="matmul__m__1__k_8cpp_1a8c1e2f07c336da53fc71dc63ab488d91" prot="public" static="no">
        <type>mini_jit::registers::gpr_t</type>
        <definition>using gpr_t =  mini_jit::registers::gpr_t</definition>
        <argsstring></argsstring>
        <name>gpr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/kernels/matmul/subkernels/matmul_m_1_k.cpp" line="6" column="1" bodyfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/kernels/matmul/subkernels/matmul_m_1_k.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="matmul__m__1__k_8cpp_1ab2ff20c54f9c12d9b08cb9910e934023" prot="public" static="no">
        <type>mini_jit::registers::simd_fp_t</type>
        <definition>using simd_fp_t =  mini_jit::registers::simd_fp_t</definition>
        <argsstring></argsstring>
        <name>simd_fp_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/kernels/matmul/subkernels/matmul_m_1_k.cpp" line="7" column="1" bodyfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/kernels/matmul/subkernels/matmul_m_1_k.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="matmul__m__1__k_8cpp_1a7783d12b9e6c05765efc68f3ed6f0484" prot="public" static="no">
        <type>mini_jit::registers::arr_spec_t</type>
        <definition>using arr_spec_t =  mini_jit::registers::arr_spec_t</definition>
        <argsstring></argsstring>
        <name>arr_spec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/kernels/matmul/subkernels/matmul_m_1_k.cpp" line="8" column="1" bodyfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/kernels/matmul/subkernels/matmul_m_1_k.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="matmul__m__1__k_8cpp_1ad9c72abe6aac4541405f5f650acc546f" prot="public" static="no">
        <type>mini_jit::registers::neon_size_spec_t</type>
        <definition>using neon_size_spec_t =  mini_jit::registers::neon_size_spec_t</definition>
        <argsstring></argsstring>
        <name>neon_size_spec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/kernels/matmul/subkernels/matmul_m_1_k.cpp" line="9" column="1" bodyfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/kernels/matmul/subkernels/matmul_m_1_k.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;mlc/instructions/all_instructions.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mlc/kernels/matmul/subkernels/matmul_m_1_k.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mlc/registers/gp_registers.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mlc/registers/simd_fp_registers.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">gpr_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mini_jit::registers::gpr_t;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">simd_fp_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mini_jit::registers::simd_fp_t;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">arr_spec_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mini_jit::registers::arr_spec_t;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">neon_size_spec_t<sp/>=<sp/>mini_jit::registers::neon_size_spec_t;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">inst<sp/><sp/><sp/><sp/>=<sp/>mini_jit::instructions;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">base<sp/><sp/><sp/><sp/>=<sp/>inst::base;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">simd_fp<sp/>=<sp/>inst::simd_fp;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::matmul_m_1_k(mini_jit::Kernel&amp;<sp/>kernel,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLoopIterations<sp/>=<sp/>m<sp/>/<sp/>16;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLoopRemainder<sp/><sp/>=<sp/>m<sp/>%<sp/>16;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PCS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::stpPre(gpr_t::x29,<sp/>gpr_t::x30,<sp/>gpr_t::sp,<sp/>-16));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::movSP(gpr_t::x29,<sp/>gpr_t::sp));</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>callee-saved<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::stpPre(gpr_t::x19,<sp/>gpr_t::x20,<sp/>gpr_t::sp,<sp/>-16));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::stpPre(gpr_t::x21,<sp/>gpr_t::x22,<sp/>gpr_t::sp,<sp/>-16));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::stpPre(gpr_t::x23,<sp/>gpr_t::x24,<sp/>gpr_t::sp,<sp/>-16));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::stpPre(gpr_t::x25,<sp/>gpr_t::x26,<sp/>gpr_t::sp,<sp/>-16));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::stpPre(gpr_t::x27,<sp/>gpr_t::x28,<sp/>gpr_t::sp,<sp/>-16));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stpPre(simd_fp_t::v8,<sp/>simd_fp_t::v9,<sp/>gpr_t::sp,<sp/>-16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stpPre(simd_fp_t::v10,<sp/>simd_fp_t::v11,<sp/>gpr_t::sp,<sp/>-16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stpPre(simd_fp_t::v12,<sp/>simd_fp_t::v13,<sp/>gpr_t::sp,<sp/>-16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stpPre(simd_fp_t::v14,<sp/>simd_fp_t::v15,<sp/>gpr_t::sp,<sp/>-16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Strides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x6,<sp/>4));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mul(gpr_t::x3,<sp/>gpr_t::x3,<sp/>gpr_t::x6));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mul(gpr_t::x4,<sp/>gpr_t::x4,<sp/>gpr_t::x6));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mul(gpr_t::x5,<sp/>gpr_t::x5,<sp/>gpr_t::x6));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>base<sp/>matrix<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x8,<sp/>gpr_t::x0));<sp/><sp/></highlight><highlight class="comment">//<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x9,<sp/>gpr_t::x1));<sp/><sp/></highlight><highlight class="comment">//<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x10,<sp/>gpr_t::x2));<sp/></highlight><highlight class="comment">//<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLoopIterations<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM16N1Loop(kernel,<sp/>mLoopIterations,<sp/>k);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLoopRemainder<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>k<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x14,<sp/>k));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>base<sp/>matrix<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x15,<sp/>gpr_t::x8));<sp/></highlight><highlight class="comment">//<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));<sp/></highlight><highlight class="comment">//<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x17,<sp/>0));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>row<sp/>count<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mLoopRemainder)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM1N1Loop(kernel);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM2N1Loop(kernel);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM3N1Loop(kernel);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM4N1Loop(kernel);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM5N1Loop(kernel);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM6N1Loop(kernel);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM7N1Loop(kernel);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM8N1Loop(kernel);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM9N1Loop(kernel);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM10N1Loop(kernel);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM11N1Loop(kernel);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM12N1Loop(kernel);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM13N1Loop(kernel);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>14:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM14N1Loop(kernel);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>15:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM15N1Loop(kernel);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>callee-saved<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldpPost(simd_fp_t::v14,<sp/>simd_fp_t::v15,<sp/>gpr_t::sp,<sp/>16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldpPost(simd_fp_t::v12,<sp/>simd_fp_t::v13,<sp/>gpr_t::sp,<sp/>16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldpPost(simd_fp_t::v10,<sp/>simd_fp_t::v11,<sp/>gpr_t::sp,<sp/>16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldpPost(simd_fp_t::v8,<sp/>simd_fp_t::v9,<sp/>gpr_t::sp,<sp/>16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::ldpPost(gpr_t::x27,<sp/>gpr_t::x28,<sp/>gpr_t::sp,<sp/>16));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::ldpPost(gpr_t::x25,<sp/>gpr_t::x26,<sp/>gpr_t::sp,<sp/>16));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::ldpPost(gpr_t::x23,<sp/>gpr_t::x24,<sp/>gpr_t::sp,<sp/>16));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::ldpPost(gpr_t::x21,<sp/>gpr_t::x22,<sp/>gpr_t::sp,<sp/>16));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::ldpPost(gpr_t::x19,<sp/>gpr_t::x20,<sp/>gpr_t::sp,<sp/>16));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>stack<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::ldpPost(gpr_t::x29,<sp/>gpr_t::x30,<sp/>gpr_t::sp,<sp/>16));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::ret());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.write(</highlight><highlight class="stringliteral">&quot;matmul_m_1_k.bin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.set_kernel();</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM16N1Loop(mini_jit::Kernel&amp;<sp/>kernel,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLoopIterations,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>the<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x11,<sp/>mLoopIterations));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>START<sp/>M_LOOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;m16n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>Matrix<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v2,<sp/>simd_fp_t::v3,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>for<sp/>Loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x14,<sp/>k));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>K<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x15,<sp/>gpr_t::x8));<sp/></highlight><highlight class="comment">//<sp/>Matrix<sp/>A<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));<sp/></highlight><highlight class="comment">//<sp/>Matrix<sp/>B<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x17,<sp/>0));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Row<sp/>index<sp/>for<sp/>Matrix<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>START<sp/>K_LOOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m16n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Load<sp/>column<sp/>of<sp/>A<sp/>(8<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x13,<sp/>gpr_t::x15));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v24,<sp/>simd_fp_t::v25,<sp/>gpr_t::x13,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v26,<sp/>simd_fp_t::v27,<sp/>gpr_t::x13,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>Column<sp/>of<sp/>Matrix<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1st<sp/>Multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v2,<sp/>simd_fp_t::v26,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v3,<sp/>simd_fp_t::v27,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decrement<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>END<sp/>K_LOOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m16n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>Matrix<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stp(simd_fp_t::v2,<sp/>simd_fp_t::v3,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increase<sp/>A<sp/>and<sp/>C<sp/>pointers<sp/>for<sp/>next<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x8,<sp/>gpr_t::x8,<sp/>16<sp/>*<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x10,<sp/>gpr_t::x10,<sp/>16<sp/>*<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>M<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x11,<sp/>gpr_t::x11,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_mLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;m16n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x11,<sp/>-l_mLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>END<sp/>M_LOOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM1N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>Matrix<sp/>C<sp/>(1<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v0,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_1_k_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m1n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(1<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v24,<sp/>gpr_t::x15,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>loop<sp/>counter<sp/>is<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m1n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v0,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM2N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(2<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v0,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_2_km1n1_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m2n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(2<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v24,<sp/>gpr_t::x15,<sp/>0,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s2));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>loop<sp/>counter<sp/>is<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m2n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v0,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM3N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(3<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x24,<sp/>gpr_t::x12));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldrPost(simd_fp_t::v0,<sp/>gpr_t::x24,<sp/>8,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v1,<sp/>gpr_t::x24,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_3_km1n1_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m3n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(3<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x24,<sp/>gpr_t::x15));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldrPost(simd_fp_t::v24,<sp/>gpr_t::x24,<sp/>8,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v25,<sp/>gpr_t::x24,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s2));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmadd(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>simd_fp_t::v1,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>loop<sp/>counter<sp/>is<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m3n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(3<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x24,<sp/>gpr_t::x12));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::strPost(simd_fp_t::v0,<sp/>gpr_t::x24,<sp/>8,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v1,<sp/>gpr_t::x24,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM4N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(4<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v0,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_4_km1n1_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m4n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(4<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v24,<sp/>gpr_t::x15,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>loop<sp/>counter<sp/>is<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m4n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v0,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM5N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(5<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v0,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>16,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_5_km1n1_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m5n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(5<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v24,<sp/>gpr_t::x15,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v25,<sp/>gpr_t::x15,<sp/>16,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmadd(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>simd_fp_t::v1,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>loop<sp/>counter<sp/>is<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m5n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(5<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v0,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>16,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM6N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(6<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v0,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_6_km1n1_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m6n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(6<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v24,<sp/>gpr_t::x15,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v25,<sp/>gpr_t::x15,<sp/>16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s2));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>loop<sp/>counter<sp/>is<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m6n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(6<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v0,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>16,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM7N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(7<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x20,<sp/>gpr_t::x12));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldrPost(simd_fp_t::v0,<sp/>gpr_t::x20,<sp/>16,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldrPost(simd_fp_t::v1,<sp/>gpr_t::x20,<sp/>8,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldrPost(simd_fp_t::v2,<sp/>gpr_t::x20,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_7_km1n1_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m7n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(7<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x20,<sp/>gpr_t::x15));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldrPost(simd_fp_t::v24,<sp/>gpr_t::x20,<sp/>16,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldrPost(simd_fp_t::v25,<sp/>gpr_t::x20,<sp/>8,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldrPost(simd_fp_t::v26,<sp/>gpr_t::x20,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s2));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmadd(simd_fp_t::v2,<sp/>simd_fp_t::v26,<sp/>simd_fp_t::v29,<sp/>simd_fp_t::v2,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m7n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(7<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x20,<sp/>gpr_t::x12));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::strPost(simd_fp_t::v0,<sp/>gpr_t::x20,<sp/>16,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::strPost(simd_fp_t::v1,<sp/>gpr_t::x20,<sp/>8,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::strPost(simd_fp_t::v2,<sp/>gpr_t::x20,<sp/>4,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM8N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>Matrix<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>START<sp/>K_LOOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m8n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Load<sp/>column<sp/>of<sp/>A<sp/>(8<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v24,<sp/>simd_fp_t::v25,<sp/>gpr_t::x15,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>Column<sp/>of<sp/>Matrix<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1st<sp/>Multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decrement<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>END<sp/>K_LOOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m8n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>Matrix<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM9N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(9<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_9_k_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m9n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(9<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x24,<sp/>gpr_t::x15));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v24,<sp/>simd_fp_t::v25,<sp/>gpr_t::x24,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v26,<sp/>gpr_t::x24,<sp/>32,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmadd(simd_fp_t::v2,<sp/>simd_fp_t::v26,<sp/>simd_fp_t::v29,<sp/>simd_fp_t::v2,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m9n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(9<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM10N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(10<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_10_k_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m10n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(10<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x24,<sp/>gpr_t::x15));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v24,<sp/>simd_fp_t::v25,<sp/>gpr_t::x24,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v26,<sp/>gpr_t::x24,<sp/>32,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v2,<sp/>simd_fp_t::v26,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s2));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m10n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(10<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM11N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(11<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v3,<sp/>gpr_t::x12,<sp/>40,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_11_k_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m11n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(11<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x24,<sp/>gpr_t::x15));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v24,<sp/>simd_fp_t::v25,<sp/>gpr_t::x24,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v26,<sp/>gpr_t::x24,<sp/>32,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v27,<sp/>gpr_t::x24,<sp/>40,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v2,<sp/>simd_fp_t::v26,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s2));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmadd(simd_fp_t::v3,<sp/>simd_fp_t::v27,<sp/>simd_fp_t::v29,<sp/>simd_fp_t::v3,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m11n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(11<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v3,<sp/>gpr_t::x12,<sp/>40,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM12N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(12<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_12_k_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m12n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(12<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x24,<sp/>gpr_t::x15));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v24,<sp/>simd_fp_t::v25,<sp/>gpr_t::x24,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v26,<sp/>gpr_t::x24,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v2,<sp/>simd_fp_t::v26,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m12n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(12<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM13N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(13<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v3,<sp/>gpr_t::x12,<sp/>48,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_13_k_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m13n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(13<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x24,<sp/>gpr_t::x15));</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v24,<sp/>simd_fp_t::v25,<sp/>gpr_t::x24,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v26,<sp/>gpr_t::x24,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v27,<sp/>gpr_t::x24,<sp/>48,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v2,<sp/>simd_fp_t::v26,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmadd(simd_fp_t::v3,<sp/>simd_fp_t::v27,<sp/>simd_fp_t::v29,<sp/>simd_fp_t::v3,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m13n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(13<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v3,<sp/>gpr_t::x12,<sp/>48,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM14N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(14<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v3,<sp/>gpr_t::x12,<sp/>48,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_14_k_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m14n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(14<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x24,<sp/>gpr_t::x15));</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v24,<sp/>simd_fp_t::v25,<sp/>gpr_t::x24,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v26,<sp/>gpr_t::x24,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v27,<sp/>gpr_t::x24,<sp/>48,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v2,<sp/>simd_fp_t::v26,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v3,<sp/>simd_fp_t::v27,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s2));</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m14n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(14<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v3,<sp/>gpr_t::x12,<sp/>48,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mini_jit::kernels::matmul::subkernels::internal::generateM15N1Loop(mini_jit::Kernel&amp;<sp/>kernel)</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOAD<sp/>MATRIX<sp/>C<sp/>(15<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v3,<sp/>gpr_t::x12,<sp/>48,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v4,<sp/>gpr_t::x12,<sp/>56,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case_15_k_loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_label(</highlight><highlight class="stringliteral">&quot;k_m15n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>column<sp/>of<sp/>A<sp/>(15<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x24,<sp/>gpr_t::x15));</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldp(simd_fp_t::v24,<sp/>simd_fp_t::v25,<sp/>gpr_t::x24,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v26,<sp/>gpr_t::x24,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v27,<sp/>gpr_t::x24,<sp/>48,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v28,<sp/>gpr_t::x24,<sp/>56,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B:<sp/>COLUMN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::ldr(simd_fp_t::v29,<sp/>gpr_t::x16,<sp/>0,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v0,<sp/>simd_fp_t::v24,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v1,<sp/>simd_fp_t::v25,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v2,<sp/>simd_fp_t::v26,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s4));</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmlaElem(simd_fp_t::v3,<sp/>simd_fp_t::v27,<sp/>simd_fp_t::v29,<sp/>arr_spec_t::s2));</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::fmadd(simd_fp_t::v4,<sp/>simd_fp_t::v28,<sp/>simd_fp_t::v29,<sp/>simd_fp_t::v4,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>column<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x15,<sp/>gpr_t::x15,<sp/>gpr_t::x3,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>row<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x16,<sp/>gpr_t::x9));</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x17,<sp/>gpr_t::x17,<sp/>4,<sp/>0));</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::add(gpr_t::x16,<sp/>gpr_t::x16,<sp/>gpr_t::x17,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>loop<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::sub(gpr_t::x14,<sp/>gpr_t::x14,<sp/>1,<sp/>0));</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_kLoopInstrCount<sp/>=<sp/>kernel.getInstrCountFromLabel(</highlight><highlight class="stringliteral">&quot;k_m15n1_loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::cbnz(gpr_t::x14,<sp/>-l_kLoopInstrCount<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STORE<sp/>MATRIX<sp/>C<sp/>(15<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(base::mov(gpr_t::x12,<sp/>gpr_t::x10));</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::stp(simd_fp_t::v0,<sp/>simd_fp_t::v1,<sp/>gpr_t::x12,<sp/>0,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v2,<sp/>gpr_t::x12,<sp/>32,<sp/>neon_size_spec_t::q));</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v3,<sp/>gpr_t::x12,<sp/>48,<sp/>neon_size_spec_t::d));</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel.add_instr(simd_fp::str(simd_fp_t::v4,<sp/>gpr_t::x12,<sp/>56,<sp/>neon_size_spec_t::s));</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/kernels/matmul/subkernels/matmul_m_1_k.cpp"/>
  </compounddef>
</doxygen>
