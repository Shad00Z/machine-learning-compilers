<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="02__microkernel_2tests_2tests_8cpp" kind="file" language="C++">
    <compoundname>tests.cpp</compoundname>
    <includes local="no">catch2/catch.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/tests.cpp</label>
        <link refid="02__microkernel_2tests_2tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>catch2/catch.hpp</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="02__microkernel_2tests_2tests_8cpp_1a34b4c3eca7342fbc4cba090d02139902" prot="public" static="no">
        <name>CATCH_CONFIG_RUNNER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/tests.cpp" line="1" column="9" bodyfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/tests.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="02__microkernel_2tests_2tests_8cpp_1ad326631151704dee3aa2d880d265fee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int i_argc, char *i_argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>i_argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>i_argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/tests.cpp" line="5" column="5" bodyfile="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/tests.cpp" bodystart="5" bodyend="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>CATCH_CONFIG_RUNNER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;catch2/catch.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>CATCH_CONFIG_RUNNER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_argc,</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*i_argv[])</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_result<sp/>=<sp/>Catch::Session().run(i_argc,<sp/>i_argv);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(l_result<sp/>&lt;<sp/>0xff<sp/>?<sp/>l_result<sp/>:<sp/>0xff);</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/machine-learning-compilers/machine-learning-compilers/src/submissions/03_neon/02_microkernel/tests/tests.cpp"/>
  </compounddef>
</doxygen>
